# Generated by Django 5.1.4 on 2025-03-31 23:37

import django.db.models.deletion
import grower_portal.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('avgCtnPrice', models.FloatField(default=0)),
                ('stdCtnCost', models.FloatField(default=0)),
                ('pricePerPound', models.FloatField(default=0)),
                ('standardCtnWeight', models.FloatField(default=0)),
                ('packingCharge', models.FloatField(default=0)),
                ('profitPerBag', models.FloatField(default=0, null=True)),
                ('promo', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='FieldContractors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('primary_contact_name', models.CharField(max_length=50)),
                ('primary_contact_phone', models.IntegerField(null=True)),
                ('office_phone', models.IntegerField(null=True)),
                ('mailing_address', models.CharField(max_length=100, null=True)),
                ('provides_trucking', models.BooleanField(blank=True, null=True)),
                ('provides_picking', models.BooleanField(null=True)),
                ('provides_forklift', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('grower_id', models.IntegerField(blank=True, null=True)),
                ('grower_contact', models.CharField(blank=True, max_length=200)),
                ('grower_contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('grower_contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('contract', models.FileField(blank=True, null=True, upload_to='./grower_contracts')),
                ('property_manger_name', models.CharField(blank=True, max_length=255, null=True)),
                ('property_manager_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('property_manager_email', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LaborContractors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('primary_contact_name', models.CharField(max_length=50)),
                ('primary_contact_phone', models.IntegerField(null=True)),
                ('office_phone', models.IntegerField(null=True)),
                ('mailing_address', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TruckingContractors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('primary_contact_name', models.CharField(max_length=50)),
                ('primary_contact_phone', models.IntegerField(null=True)),
                ('office_phone', models.IntegerField(null=True)),
                ('mailing_address', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('block_id', models.IntegerField(default=0, primary_key=True, serialize=False, unique=True)),
                ('size', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('gib_applied', models.BooleanField(null=True)),
                ('planted_commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tocommodity', to='grower_portal.commodity')),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='grower_portal.folder')),
                ('grower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders', to='grower_portal.grower')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(upload_to=grower_portal.models.file_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('folder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='grower_portal.folder')),
            ],
        ),
        migrations.CreateModel(
            name='PlannedHarvest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('planned_bins', models.IntegerField(default=0, null=True)),
                ('harvesting_rate', models.FloatField(null=True)),
                ('hauling_rate', models.FloatField(null=True)),
                ('forklift_rate', models.FloatField(null=True)),
                ('notes_general', models.TextField(blank=True, null=True)),
                ('deliver_to', models.CharField(default='CF', max_length=30, null=True)),
                ('packed_by', models.CharField(default='CF', max_length=30, null=True)),
                ('contractor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='labor_contractors', to='grower_portal.fieldcontractors')),
                ('forklift_contractor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='forklift_contractor', to='grower_portal.fieldcontractors')),
                ('grower_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planned_harvests', to='grower_portal.block')),
                ('hauler', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trucking_company', to='grower_portal.fieldcontractors')),
            ],
        ),
        migrations.CreateModel(
            name='HarvestPlansDate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('date', models.DateField()),
                ('estimated_bins', models.IntegerField()),
                ('harvest_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dates', to='grower_portal.plannedharvest')),
            ],
        ),
        migrations.CreateModel(
            name='Pools',
            fields=[
                ('id', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('openDate', models.DateField()),
                ('closeDate', models.DateField(blank=True, null=True)),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pooltocommodity', to='grower_portal.commodity')),
            ],
        ),
        migrations.AddField(
            model_name='plannedharvest',
            name='pool',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='harvest_pool', to='grower_portal.pools'),
        ),
        migrations.CreateModel(
            name='ProductionRuns',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('bins', models.IntegerField(default=0)),
                ('run_date', models.DateField(null=True)),
                ('pick_date', models.DateField(null=True)),
                ('location', models.CharField(blank=True, null=True)),
                ('pool', models.CharField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('row_order', models.IntegerField(blank=True, null=True)),
                ('run_status', models.CharField(blank=True, default='Not Started', null=True)),
                ('grower_block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_runs', to='grower_portal.block')),
            ],
        ),
        migrations.CreateModel(
            name='Ranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('grower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='togrower', to='grower_portal.grower')),
            ],
        ),
        migrations.AddField(
            model_name='block',
            name='ranch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toranch', to='grower_portal.ranch'),
        ),
        migrations.CreateModel(
            name='Receivings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('receipt_id', models.CharField(max_length=20)),
                ('qty_received', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('harvest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receivings', to='grower_portal.plannedharvest')),
            ],
        ),
        migrations.CreateModel(
            name='Varieties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('commodity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='varietytocommodity', to='grower_portal.commodity')),
            ],
        ),
        migrations.AddField(
            model_name='block',
            name='planted_variety',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tovariety', to='grower_portal.varieties'),
        ),
    ]
